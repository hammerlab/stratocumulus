open build/OCaml
open tools/OMakeLibrary.om
DefineCommandVars()

.PHONY: build-all doc install uninstall


################################################################################
# General Project Information
PROJECT = stratocumulus
VERSION = 0.0.0+master
DESCRIPTION = Ketrew Workflows That Build Clusters

if $(test -e .git)
    # this one works with quotes not the `None` one
    GIT_COMMIT = 'Some "$(shell git rev-parse HEAD)"'
    export
else
    GIT_COMMIT = None
    export

LIB_PACKAGES = ketrew ppx_deriving.std

OCAMLFLAGS = -bin-annot -absname -thread -short-paths -g \
             -keep-docs -keep-locs \
             -strict-formats -strict-sequence -w +9 -safe-string

section # deployer library
    OCAMLPACKS[] = $(LIB_PACKAGES)
    _build/src/lib/metadata.ml: :value: $(VERSION)
        echo "(** Metadata generated at compile-time *)" > $@
        echo "let version = lazy \"$(VERSION)\"" >> $@
        echo "let git_commit = $(GIT_COMMIT)" >> $@
    OCAML_GENERATED_MODULES[] = metadata
    .DEFAULT: $(OCamlPackedLibraryOfDir stratocumulus, src/lib)



section # Executable tests
    OCAML_LOCAL_LIBS += src/lib/stratocumulus
    OCAMLPACKS[] = $(LIB_PACKAGES) biokepi
    OCamlProgramOfFile(deployment-test, $(file src/test/test_deployment.ml))
    OCamlProgramOfFile(biokepi-test, $(file src/test/test_biokepi.ml))

DotMerlin(./src, $(LIB_PACKAGES) biokepi)

install: install-lib-stratocumulus
uninstall: uninstall-lib-stratocumulus

# `omake build-all` to build also the tests:
build-all: lib-stratocumulus \
           app-deployment-test \
           app-biokepi-test

#.PHONY: doc

#DOC_PACKAGES[] = $(LIB_PACKAGES)
#doc:
#    ./tools/build-doc.sh $(concat \,, $(LIB_PACKAGES))


DIRS[] = src/lib/
LIBS[] = stratocumulus
DotOCamlinit($(DIRS), $(LIB_PACKAGES), $(LIBS))
